<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<window>
    <defaultcontrol always="true">1000</defaultcontrol>
    <include>DefaultSkinSettings</include>
    <onload>RunScript(script.skinshortcuts,type=buildxml&amp;mainmenuID=300&amp;group=mainmenu|powermenu|netflixmenu)</onload>
	<include condition="Skin.String(widgets_rotate) + !Skin.String(widgets_rotate,disabled)">WidgetsAutoRotateUnload</include>
    <onunload condition="!Skin.HasSetting(SectionBackgroundHomeOnly)">SetProperty(SectionBackground,$INFO[Control.GetLabel(99004)])</onunload>
    <!-- auto close homemenu and focus mainmenu when home is unloaded -->
    <onunload>ClearProperty(submenu,Home)</onunload>
    <onunload>ClearProperty(ShowWidget,Home)</onunload>
    <onunload>ClearProperty(ShowViewSubMenu,Home)</onunload>
    <onunload>ClearProperty(SkinHelper.WidgetContainer,Home)</onunload>
    <menucontrol>300</menucontrol>
	<controls>
	
        <!--Global Background-->
        <include>GlobalBackground</include>
    
        <control type="button" id="1000">
			<description>hidden button for onload actions as placing them in onload causes strange behaviour</description>
            <onfocus condition="[SubString(Skin.String(HomeLayout), netflix) | Skin.String(HomeLayout, win10)] + !Skin.HasSetting(AutoFocusHome)">SetFocus(9000)</onfocus>
            <onfocus condition="[[!SubString(Skin.String(HomeLayout), netflix) + !Skin.String(HomeLayout, win10)] | Skin.HasSetting(AutoFocusHome)] + !Skin.String(home.defaultfocus)">SetFocus(300)</onfocus>
            <onfocus condition="[[!SubString(Skin.String(HomeLayout), netflix) + !Skin.String(HomeLayout, win10)] | Skin.HasSetting(AutoFocusHome)] + Skin.String(home.defaultfocus)">SetFocus(300,$INFO[Skin.String(home.defaultfocus)])</onfocus>
            <onfocus condition="Control.IsVisible(510)">SetProperty(SkinHelper.WidgetContainer,510)</onfocus>
            <onfocus>SetProperty(HomeFirstLoadDone,done)</onfocus>
			<texturenofocus>-</texturenofocus>
			<texturefocus>-</texturefocus>
            <onleft>300</onleft>
            <onright>300</onright>
            <onup>300</onup>
            <ondown>300</ondown>
            <onback>300</onback>
            <label>hiddenbuttonhiddenbuttonhiddenbutton</label>
            <visible allowhiddenfocus="true">false</visible>
		</control>
		
		<!--NowPlaying-->
		<include condition="!Skin.HasTheme(classic)">NowPlayingBackground</include>
		
        <!-- Hidden control to preload weather conditions -->
		<control type="label">
			<font>-</font>
			<label>$INFO[Weather.Conditions]</label>
		</control>
        <!--hidden label with widget style-->
        <control type="label" id="17888">
            <font>-</font>
            <label>$VAR[widgetstyle_active]</label>
        </control>
		
        <!-- hidden submenu for count calculations -->
        <include condition="!Skin.String(HomeLayout, enhanced) + !Skin.HasSetting(DisableAllSubmenus)">hiddenSubmenu</include>
	
		<!-- Home Screen -->
        <include condition="Skin.String(HomeLayout, 1) | Skin.String(HomeLayout, 2) | Skin.String(HomeLayout, 3) | Skin.String(HomeLayout, 1small) | Skin.String(HomeLayout, 2small) | Skin.String(HomeLayout, 3small)">HomeTitanTiles</include>
        <include condition="Skin.String(HomeLayout, simplehor) | Skin.String(HomeLayout, lowhorizontal)">HorizontalHome</include>
        <include condition="Skin.String(HomeLayout, simplever) | Skin.String(HomeLayout, simplever_tiles) | Skin.String(HomeLayout, verticalbig)">VerticalHome</include>
        <include condition="Skin.String(HomeLayout, enhanced)">EnhancedHome</include>
        <include condition="Skin.String(HomeLayout, netflix)">HomeNetflix</include>
        <include condition="Skin.String(HomeLayout, netflix2)">HomeNetflix2</include>
        <include condition="Skin.String(HomeLayout, win10)">HomeWin10</include>
		
        <!-- Header -->
		<include condition="!Skin.String(HomeLayout, netflix2)">Header</include>
        
        <!--NowPlaying-->
		<include condition="Skin.HasTheme(classic)">NowPlayingMusicClassic</include>
		<include condition="Skin.HasTheme(classic)">NowPlayingVideoClassic</include>
		<include condition="!Skin.HasTheme(classic)">NowPlayingInfoBar</include>
        
        <include condition="Skin.HasSetting(DebugGrid) | Skin.HasSetting(DebugInfo)">DebugInfo</include>

	</controls>
</window>
